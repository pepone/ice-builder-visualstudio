{
  "name": "Slice",
  "scopeName": "source.slice",
  "fileTypes":
  [
    "ice"
  ],

  "patterns": [
    {"include": "#comment"},
    {"include": "#preprocessor"},
    {"include": "#metadata.global"},
    {"include": "#storage.module"}
  ],

  "repository": {
    "comment": {
      "patterns": [
        {"include": "#comment.line"},
        {"include": "#comment.block"}
      ]
    },
    "comment.line": {
      "patterns": [
        {
          "name": "comment.line.slice",
          "contentName": "text.slice",
          "begin": "\\/\\/",
          "end": "$",
          "beginCaptures": {
            "0": {"name": "punctuation.definition.comment.line.begin.slice"}
          },
          "patterns": [
            {"include": "#annotation"},
            {"include": "#link"},
            {"include": "#line.continuation"}
          ]
        }
      ]
    },
    "comment.block": {
      "patterns": [
        {
          "name": "comment.block.slice",
          "contentName": "text.slice",
          "begin": "\\/\\*",
          "end": "\\*\\/",
          "beginCaptures": {
            "0": {"name": "punctuation.definition.comment.block.begin.slice"}
          },
          "endCaptures": {
            "0": {"name": "punctuation.definition.comment.block.end.slice"}
          },
          "patterns": [
            {"include": "#annotation"},
            {"include": "#link"},
            {"include": "#line.continuation"}
          ]
        }
      ]
    },
    "annotation": {
      "patterns": [
        {
          "name": "storage.type.annotation.slice",
          "match": "(@)\\S*\\b",
          "captures": {
            "1": {"name": "punctuation.definition.annotation.slice"}
          }
        }
      ]
    },
    "link": {
      "patterns": [
        {
          "name": "variable.link.slice",
          "match": "(\\b\\S*)?(#)\\S*\\b",
          "captures": {
            "1": {"name": "punctuation.definition.link.slice"}
          }
        }
      ]
    },

    "preprocessor": {
      "patterns": [
        {"include": "#preprocessor.if"},
        {"include": "#preprocessor.ifdef"},
        {"include": "#preprocessor.ifndef"},
        {"include": "#preprocessor.elif"},
        {"include": "#preprocessor.else"},
        {"include": "#preprocessor.endif"},
        {"include": "#preprocessor.define"},
        {"include": "#preprocessor.undef"},
        {"include": "#preprocessor.include"},
        {"include": "#preprocessor.pragma"},
        {"include": "#preprocessor.line"},
        {"include": "#preprocessor.error"},
        {"include": "#preprocessor.null"}
      ]
    },
    "preprocessor.ifdef": {
      "patterns": [
        {
          "name": "meta.preprocessor.ifdef.slice",
          "begin": "(#)\\s*ifdef\\b",
          "end": "$",
          "beginCaptures": {
            "0": {"name": "keyword.control.preprocessor.ifdef.slice"},
            "1": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"},
            {
              "begin": "\\b\\w+\\b",
              "end": "$",
              "beginCaptures": {
                "0": {"patterns": [{"include": "#preprocessor.identifier"}]}
              },
              "patterns": [
                {"include": "#standardP"}
              ]
            }
          ]
        }
      ]
    },
    "preprocessor.ifndef": {
      "patterns": [
        {
          "name": "meta.preprocessor.ifndef.slice",
          "begin": "(#)\\s*ifndef\\b",
          "end": "$",
          "beginCaptures": {
            "0": {"name": "keyword.control.preprocessor.ifndef.slice"},
            "1": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"},
            {
              "begin": "\\b\\w+\\b",
              "end": "$",
              "beginCaptures": {
                "0": {"patterns": [{"include": "#preprocessor.identifier"}]}
              },
              "patterns": [
                {"include": "#standardP"}
              ]
            }
          ]
        }
      ]
    },
    "preprocessor.if": {
      "patterns": [
        {
          "name": "meta.preprocessor.if.slice",
          "begin": "(#)\\s*if\\b",
          "end": "$",
          "beginCaptures": {
            "0": {"name": "keyword.control.preprocessor.if.slice"},
            "1": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"}
          ]
        }
      ]
    },
    "preprocessor.elif": {
      "patterns": [
        {
          "name": "meta.preprocessor.elif.slice",
          "begin": "(#)\\s*elif\\b",
          "end": "$",
          "beginCaptures": {
            "0": {"name": "keyword.control.preprocessor.elif.slice"},
            "1": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"}
          ]
        }
      ]
    },
    "preprocessor.else": {
      "patterns": [
        {
          "name": "meta.preprocessor.endif.slice",
          "begin": "(#)\\s*else\\b",
          "end": "$",
          "beginCaptures": {
            "0": {"name": "keyword.control.preprocessor.else.slice"},
            "1": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"}
          ]
        }
      ]
    },
    "preprocessor.endif": {
      "patterns": [
        {
          "name": "meta.preprocessor.endif.slice",
          "begin": "(#)\\s*endif\\b",
          "end": "$",
          "beginCaptures": {
            "0": {"name": "keyword.control.preprocessor.endif.slice"},
            "1": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"}
          ]
        }
      ]
    },
    "preprocessor.define": {
      "patterns": [
        {
          "name": "meta.preprocessor.define.slice",
          "begin": "(#)\\s*define\\b",
          "end": "$",
          "beginCaptures": {
            "0": {"name": "keyword.control.preprocessor.define.slice"},
            "1": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"},
            {
              "begin": "\\b(\\w+)((\\())",
              "end": "$",
              "beginCaptures": {
                "1": {"patterns": [{"include": "#preprocessor.identifier"}]},
                "2": {"name": "meta.group.parameters.preprocessor.slice"},
                "3": {"name": "punctuation.section.group.parameters.begin.slice"}
              },
              "patterns": [
                {"include": "#standardP"},
                {
                  "begin": "\\b\\w+\\b",
                  "end": "(?=\\))|(,)|($)",
                  "beginCaptures": {
                    "0": {"patterns": [{"include": "#preprocessor.identifier"}]}
                  },
                  "endCaptures": {
                    "1": {"name": "punctuation.separator.parameter.preprocessor.slice"},
                    "2": {"name": "invalid.mismatched.parenthesis.slice"}
                  },
                  "patterns": [
                    {"include": "#standardP"}
                  ]
                },
                {
                  "begin": "\\b\\w+\\b",
                  "end": "(?=\\))|((,))|($)",
                  "beginCaptures": {
                    "0": {"name": "punctuation.variable.parameter.preprocessor.slice"}
                  },
                  "endCaptures": {
                    "1": {"name": "punctuation.separator.parameter.preprocessor.slice"},
                    "2": {"name": "invalid.trailing-comma.slice"},
                    "3": {"name": "invalid.mismatched.parenthesis.slice"}
                  },
                  "patterns": [
                    {"include": "#standardP"}
                  ]
                },
                {
                  "begin": "(\\))",
                  "end": "$",
                  "beginCaptures": {
                    "0": {"name": "meta.group.parameters.preprocessor.slice"},
                    "1": {"name": "punctuation.section.group.parameters.end.slice"}
                  },
                  "patterns": [
                    {"include": "#standardP"},
                    {
                      "name": "constant.preprocessor.slice",
                      "match": "\\S"
                    }
                  ]
                }
              ]
            },
            {
              "begin": "\\b\\w+\\b",
              "end": "$",
              "beginCaptures": {
                "0": {"patterns": [{"include": "#preprocessor.identifier"}]}
              },
              "patterns": [
                {"include": "#standardP"},
                {
                  "name": "constant.preprocessor.slice",
                  "match": "\\S"
                }
              ]
            }
          ]
        }
      ]
    },
    "preprocessor.undef": {
      "patterns": [
        {
          "name": "meta.preprocessor.undef.slice",
          "begin": "((#)\\s*undef)\\b",
          "end": "$",
          "beginCaptures": {
            "1": {"name": "keyword.control.preprocessor.undef.slice"},
            "2": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"},
            {
              "begin": "\\b\\w+\\b",
              "end": "$",
              "beginCaptures": {
                "0": {"patterns": [{"include": "#preprocessor.identifier"}]}
              },
              "patterns": [
                {"include": "#standardP"}
              ]
            }
          ]
        }
      ]
    },
    "preprocessor.include" : {
      "patterns": [
        {
          "name": "meta.preprocessor.include.slice",
          "begin": "((#)\\s*include)\\b",
          "end": "$",
          "beginCaptures": {
            "1": {"name": "keyword.control.preprocessor.include.slice"},
            "2": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"},
            {
              "begin": "(?<=\"|>)",
              "end": "$",
              "patterns": [
                {"include": "#standardP"}
              ]
            },
            {
              "name": "string.quoted.double.slice",
              "contentName": "entity.name.header.slice",
              "begin": "\"",
              "end": "(\")|($)",
              "beginCaptures": {
                "0": {"name": "punctuation.definition.string.begin.slice"}
              },
              "endCaptures": {
                "1": {"name": "punctuation.definition.string.end.slice"},
                "2": {"name": "invalid.illegal.mismatched-quotes.slice"}
              },
              "patterns": [
                {
                  "match": "\\\\."
                },
                {"include": "#line.continuation"}
              ]
            },
            {
              "name": "string.quoted.other.angle.slice",
              "contentName": "entity.name.header.slice",
              "begin": "<",
              "end": "(>)|($)",
              "beginCaptures": {
                "0": {"name": "punctuation.definition.string.begin.slice"}
              },
              "endCaptures": {
                "1": {"name": "punctuation.definition.string.end.slice"},
                "2": {"name": "invalid.illegal.mismatched-quotes.slice"}
              },
              "patterns": [
                {
                  "match": "\\\\."
                },
                {"include": "#line.continuation"}
              ]
            }
          ]
        }
      ]
    },
    "preprocessor.pragma": {
      "patterns": [
        {
          "name": "meta.preprocessor.pragma.slice",
          "begin": "((#)\\s*pragma)\\b",
          "end": "$",
          "beginCaptures": {
            "1": {"name": "keyword.control.preprocessor.pragma.slice"},
            "2": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"},
            {
              "begin": "\\b\\S+\\b",
              "end": "$",
              "beginCaptures": {
                "0": {"name": "keyword.control.preprocessor.pragma.other.slice"}
              },
              "patterns": [
                {"include": "#standardP"}
              ]
            }
          ]
        }
      ]
    },
    "preprocessor.line": {
      "patterns": [
        {
          "name": "meta.preprocessor.line.slice",
          "begin": "((#)\\s*line)\\b",
          "end": "$",
          "beginCaptures": {
            "1": {"name": "keyword.control.preprocessor.line.slice"},
            "2": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"},
            {
              "begin": "\\b[\\d]+\\b",
              "end": "$",
              "beginCaptures": {
                "0": {"patterns": [{"include": "#constant.numeric.dec"}]}
              },
              "patterns": [
                {"include": "#standardP"},
                {
                  "begin": "(?<=\")",
                  "end": "$",
                  "patterns": [
                    {"include": "#standardP"}
                  ]
                },
                {
                  "name": "string.quoted.double.slice",
                  "contentName": "entity.name.file.slice",
                  "begin": "\"",
                  "end": "(\")|($)",
                  "beginCaptures": {
                    "0": {"name": "punctuation.definition.string.begin.slice"}
                  },
                  "endCaptures": {
                    "1": {"name": "punctuation.definition.string.end.slice"},
                    "2": {"name": "invalid.illegal.mismatched-quotes.slice"}
                  },
                  "patterns": [
                    {
                      "match": "\\\\."
                    },
                    {"include": "#line.continuation"}
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "preprocessor.error": {
      "patterns": [
        {
          "name": "meta.preprocessor.error.slice",
          "begin": "((#)\\s*error)\\b",
          "end": "$",
          "beginCaptures": {
            "1": {"name": "keyword.control.preprocessor.error.slice"},
            "2": {"name": "punctuation.definition.preprocessor.slice"}
          },
          "patterns": [
            {"include": "#standardP"},
            {
              "name": "text.error.slice",
              "match": "."
            }
          ]
        }
      ]
    },
    "preprocessor.null": {
      "patterns": [
        {
          "name": "meta.preprocessor.null.slice",
          "begin": "(#)",
          "end": "$",
          "beginCaptures": {
            "0": {"name": "punctuation.definition.preprocessor.slice"},
            "1": {"name": "keyword.control.preprocessor.null.slice"}
          },
          "patterns": [
            {"include": "#standardP"}
          ]
        }
      ]
    },
    "preprocessor.identifier": {
      "patterns": [
        {
          "name": "entity.identifier.preproprocessor.slice",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {"include": "#invalid"}
      ]
    },

    "metadata": {
      "patterns": [
        {"include": "#metadata.global"},
        {"include": "#metadata.local"}
      ]
    },
    "metadata.global": {
      "patterns": [
        {
          "name": "meta.metadata.global.slice",
          "begin": "\\[\\[",
          "end": "\\]\\]",
          "beginCaptures": {
            "0": {"name": "punctuation.definition.metadata.global.begin.slice"}
          },
          "endCaptures": {
            "0": {"name": "punctuation.definition.metadata.global.end.slice"}
          },
          "patterns": [
            {"include": "#metadata.content"}
          ]
        }
      ]
    },
    "metadata.local": {
      "patterns": [
        {
          "name": "meta.metadata.local.slice",
          "begin": "\\[",
          "end": "\\]",
          "beginCaptures": {
            "0": {"name": "punctuation.definition.metadata.local.begin.slice"}
          },
          "endCaptures": {
            "0": {"name": "punctuation.definition.metadata.local.end.slice"}
          },
          "patterns": [
            {"include": "#metadata.content"}
          ]
        }
      ]
    },
    "metadata.content": {
      "patterns": [
        {"include": "#standard"},
        {
          "begin": "(\")",
          "end": "(?=\\])|(?<=,)",
          "beginCaptures": {
            "0": {"name": "string.quoted.double.slice"},
            "1": {"name": "punctuation.definition.string.begin.slice"}
          },
          "patterns": [
            {"include": "#line.continuation"},
            {
              "name": "string.quoted.double.slice",
              "match": "((?:[^\\\\\"]|\\\\.)+)",
              "captures": {
                "1": {"patterns": [{"include": "#metadata.identifier"}]}
              }
            },
            {
              "begin": "(\")",
              "end": "(?=\\])|(,)",
              "beginCaptures": {
                "0": {"name": "string.quoted.double.slice"},
                "1": {"name": "punctuation.definition.string.end.slice"}
              },
              "endCaptures": {
                "1": {"name": "punctuation.separator.metadata.slice"}
              },
              "patterns": [
                {"include": "#standard"}
              ]
            }
          ]
        }
      ]
    },
    "metadata.identifier": {
      "patterns": [
        {
          "name": "entity.metadata.directive.slice",
          "match": "\\S+"
        }
      ]
    },

    "storage": {
      "patterns": [
        {"include": "#storage.module"},
        {"include": "#storage.enum"},
        {"include": "#storage.struct"},
        {"include": "#storage.sequence"},
        {"include": "#storage.dictionary"},
        {"include": "#storage.interface"},
        {"include": "#storage.exception"},
        {"include": "#storage.class"},
        {"include": "#storage.basic"}
      ]
    },
    "storage.module": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.module.slice",
          "begin": "(?<!\\\\)\\bmodule\\b",
          "end": "}",
          "beginCaptures": {
            "0": {"name": "storage.type.module.slice"}
          },
          "endCaptures": {
            "0": {"name": "punctuation.section.block.end.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.module.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#standard"},
                {
                  "begin": "{",
                  "end": "(?=})",
                  "beginCaptures": {
                    "0": {"name": "punctuation.section.block.begin.slice"}
                  },
                  "patterns": [
                    {"include": "#standard"},
                    {"include": "#storage"}
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "storage.enum": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.enum.slice",
          "begin": "(?<!\\\\)\\benum\\b",
          "end": "}",
          "beginCaptures": {
            "0": {"name": "storage.type.enum.slice"}
          },
          "endCaptures": {
            "0": {"name": "punctuation.section.block.end.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.enum.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#standard"},
                {
                  "begin": "{",
                  "end": "(?=})",
                  "beginCaptures": {
                    "0": {"name": "punctuation.section.block.begin.slice"}
                  },
                  "patterns": [
                    {"include": "#standard"},
                    {
                      "begin": "\\\\?\\b\\w+\\b",
                      "end": "(?=})|(,)",
                      "beginCaptures": {
                        "0": {
                          "name": "constant.other.enum.slice",
                          "patterns": [{"include": "#identifier"}]
                        }
                      },
                      "endCaptures": {
                        "1": {"name": "punctuation.separator.enum.slice"}
                      },
                      "patterns": [
                        {"include": "#standard"},
                        {
                          "begin": "=",
                          "end": "(?=})|(?=,)",
                          "beginCaptures": {
                            "0": {"name": "keyword.operator.assignment.slice"}
                          },
                          "patterns": [
                            {"include": "#standard"},
                            {"include": "#constant"}
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "storage.struct": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.struct.slice",
          "begin": "(?<!\\\\)\\bstruct\\b",
          "end": "}",
          "beginCaptures": {
            "0": {"name": "storage.type.struct.slice"}
          },
          "endCaptures": {
            "0": {"name": "punctuation.section.block.end.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.struct.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#standard"},
                {
                  "begin": "{",
                  "end": "(?=})",
                  "beginCaptures": {
                    "0": {"name": "punctuation.section.block.begin.slice"}
                  },
                  "patterns": [
                    {"include": "#standard"},
                    {"include": "#storage.basic"}
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "storage.sequence": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.sequence.slice",
          "begin": "(?<!\\\\)\\bsequence\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"name": "storage.type.sequence.slice"}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "(\\<)",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {"name": "meta.generic.sequence.slice"},
                "1": {"name": "punctuation.definition.generic.begin.slice"}
              },
              "patterns": [
                {"include": "#standard"},
                {
                  "begin": "(\\\\?[:\\w]+)|(?=\\>)",
                  "end": "(?=;|})",
                  "beginCaptures": {
                    "1": {
                      "name": "meta.generic.sequence.slice",
                      "patterns": [{"include": "#storage.types"}]
                    },
                    "2": {"name": "invalid.illegal.missing-type.slice"}
                  },
                  "patterns": [
                    {"include": "#standard"},
                    {
                      "begin": "(\\>)",
                      "end": "(?=;|})",
                      "beginCaptures": {
                        "0": {"name": "meta.generic.sequence.slice"},
                        "1": {"name": "punctuation.definition.generic.end.slice"}
                      },
                      "patterns": [
                        {"include": "#standard"},
                        {
                          "begin": "\\\\?\\b\\w+\\b",
                          "end": "(?=;|})",
                          "beginCaptures": {
                            "0": {
                              "name": "entity.name.sequence.slice",
                              "patterns": [{"include": "#storage.identifier"}]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "storage.dictionary": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.dictionary.slice",
          "begin": "(?<!\\\\)\\bdictionary\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"name": "storage.type.dictionary.slice"}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "(\\<)",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {"name": "meta.generic.dictionary.slice"},
                "1": {"name": "punctuation.definition.generic.begin.slice"}
              },
              "patterns": [
                {"include": "#standard"},
                {
                  "begin": "(\\\\?[:\\w]+)|(?=\\>)",
                  "end": "(?=;|})",
                  "beginCaptures": {
                    "1": {
                      "name": "meta.generic.dictionary.slice",
                      "patterns": [{"include": "#storage.types"}]
                    },
                    "2": {"name": "invalid.illegal.missing-type.slice"}
                  },
                  "patterns": [
                    {"include": "#standard"},
                    {
                      "begin": "(,)|(?=\\>)",
                      "end": "(?=;|{|})",
                      "beginCaptures": {
                        "0":{"name": "meta.generic.dictionary.slice"},
                        "1": {"name": "punctuation.separator.dictionary.slice"},
                        "2": {"name": "invalid.illegal.missing-type.slice"}
                      },
                      "patterns": [
                        {"include": "#standard"},
                        {
                          "begin": "(\\\\?[:\\w]+)|(?=\\>)",
                          "end": "(?=;|})",
                          "beginCaptures": {
                            "1": {
                              "name": "meta.generic.dictionary.slice",
                              "patterns": [{"include": "#storage.types"}]
                            },
                            "2": {"name": "invalid.illegal.missing-type.slice"}
                          },
                          "patterns": [
                            {"include": "#standard"},
                            {
                              "begin": "(\\>)",
                              "end": "(?=;|})",
                              "beginCaptures": {
                                "0": {"name": "meta.generic.dictionary.slice"},
                                "1": {"name": "punctuation.definition.generic.end.slice"}
                              },
                              "patterns": [
                                {"include": "#standard"},
                                {
                                  "begin": "\\\\?\\b\\w+\\b",
                                  "end": "(?=;|})",
                                  "beginCaptures": {
                                    "0": {
                                      "name": "entity.name.dictionary.slice",
                                      "patterns": [{"include": "#storage.identifier"}]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "storage.interface": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.interface.slice",
          "begin": "(?<!\\\\)\\binterface\\b",
          "end": "(})|(;)",
          "beginCaptures": {
            "0": {"name": "storage.type.interface.slice"}
          },
          "endCaptures": {
            "1": {"name": "punctuation.section.block.end.slice"},
            "2": {"name": "punctuation.terminator.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=}|;)",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.interface.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#standard"},
                {
                  "begin": "(?<!\\\\)\\bextends\\b",
                  "end": "(?=})|((?=;))",
                  "beginCaptures": {
                    "0": {"name": "storage.modifier.extends.slice"}
                  },
                  "endCaptures": {
                    "1": {"name": "invalid.illegal.missing-brace.slice"}
                  },
                  "patterns": [
                    {"include": "#standard"},
                    {
                      "begin": "\\\\?[:\\w]+",
                      "end": "(?={|}|;)|(,)",
                      "beginCaptures": {
                        "0": {"patterns": [{"include": "#storage.types"}]}
                      },
                      "endCaptures": {
                        "1": {"name": "punctuation.separator.interface.extends.slice"}
                      },
                      "patterns": [
                        {"include": "#standard"}
                      ]
                    },
                    {"include": "#storage.interface.body"}
                  ]
                },
                {"include": "#storage.interface.body"}
              ]
            }
          ]
        }
      ]
    },
    "storage.interface.body": {
      "patterns": [
        {
          "begin": "{",
          "end": "(?=})",
          "beginCaptures": {
            "0": {"name": "punctuation.section.block.begin.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {"include": "#storage.operation"}
          ]
        }
      ]
    },
    "storage.operation": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.operation.slice",
          "begin": "\\\\?[:\\w]+",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [
              {"include": "#storage.types.void"},
              {"include": "#storage.types"}
            ]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing-brace.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.function.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#standard"},
                {
                  "begin": "\\(",
                  "end": "(?=;|})",
                  "beginCaptures": {
                    "0": {"name": "punctuation.section.group.operation.parameters.begin.slice"}
                  },
                  "patterns": [
                    {"include": "#standard"},
                    {
                      "begin": "\\)",
                      "end": "(?=;|})",
                      "beginCaptures": {
                        "0": {"name": "punctuation.section.group.operation.parameters.end.slice"}
                      },
                      "patterns": [
                        {"include": "#standard"},
                        {
                          "begin": "(?<!\\\\)\\bthrows\\b",
                          "end": "(?=;|})",
                          "beginCaptures": {
                            "0": {"name": "storage.modifier.throws.slice"}
                          },
                          "patterns": [
                            {"include": "#standard"},
                            {
                              "begin": "\\\\?[:\\w]+",
                              "end": "(?=;|})|(,)",
                              "beginCaptures": {
                                "0": {"patterns": [{"include": "#storage.types"}]}
                              },
                              "endCaptures": {
                                "1": {"name": "punctuation.separator.operation.throws.slice"}
                              },
                              "patterns": [
                                {"include": "#standard"}
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {"include": "#storage.modifier"},
                    {
                      "begin": "\\\\?[:\\w]+",
                      "end": "(?=\\))|(?<=,)",
                      "beginCaptures": {
                        "0": {"patterns": [{"include": "#storage.types"}]}
                      },
                      "patterns": [
                        {
                          "begin": "\\\\?\\b\\w+\\b",
                          "end": "(?=\\))|(,)",
                          "beginCaptures": {
                            "0": {
                              "name": "entity.name.operation.parameter",
                              "patterns": [{"include": "#storage.identifier"}]
                            }
                          },
                          "endCaptures": {
                            "1": {"name": "punctuation.separator.operation.parameter.slice"}
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "storage.exception": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.exception.slice",
          "begin": "(?<!\\\\)\\bexception\\b",
          "end": "}",
          "beginCaptures": {
            "0": {"name": "storage.type.exception.slice"}
          },
          "endCaptures": {
            "0": {"name": "punctuation.section.block.end.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.exception.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#standard"},
                {
                  "begin": "(?<!\\\\)\\bextends\\b",
                  "end": "(?=})",
                  "beginCaptures": {
                    "0": {"name": "storage.modifier.extends.slice"}
                  },
                  "patterns": [
                    {"include": "#standard"},
                    {
                      "begin": "\\\\?[:\\w]+",
                      "end": "(?={|})|(,)",
                      "beginCaptures": {
                        "0": {"patterns": [{"include": "#storage.types"}]}
                      },
                      "endCaptures": {
                        "1": {"name": "punctuation.separator.exception.extends.slice"}
                      },
                      "patterns": [
                        {"include": "#standard"}
                      ]
                    },
                    {"include": "#storage.exception.body"}
                  ]
                },
                {"include": "#storage.exception.body"}
              ]
            }
          ]
        }
      ]
    },
    "storage.exception.body": {
      "patterns": [
        {
          "begin": "{",
          "end": "(?=})",
          "beginCaptures": {
            "0": {"name": "punctuation.section.block.begin.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {"include": "#storage.basic"}
          ]
        }
      ]
    },
    "storage.class": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.class.slice",
          "begin": "(?<!\\\\)\\bclass\\b",
          "end": "(})|(;)",
          "beginCaptures": {
            "0": {"name": "storage.type.class.slice"}
          },
          "endCaptures": {
            "1": {"name": "punctuation.section.block.end.slice"},
            "2": {"name": "punctuation.terminator.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=}|;)",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.class.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#standard"},
                {
                  "begin": "(?<!\\\\)\\bextends\\b",
                  "end": "(?=})|((?=;))",
                  "beginCaptures": {
                    "0": {"name": "storage.modifier.extends.slice"}
                  },
                  "endCaptures": {
                    "1": {"name": "invalid.illegal.missing-brace.slice"}
                  },
                  "patterns": [
                    {"include": "#standard"},
                    {
                      "begin": "\\\\?[:\\w]+",
                      "end": "(?=}|;)",
                      "beginCaptures": {
                        "0": {"patterns": [{"include": "#storage.types"}]}
                      },
                      "patterns": [
                        {"include": "#standard"},
                        {"include": "#storage.class.implements"}
                      ]
                    },
                    {
                      "name": "invalid.illegal.missing-types.slice",
                      "include": "#storage.class.implements"
                    }
                  ]
                },
                {"include": "#storage.class.implements"}
              ]
            }
          ]
        }
      ]
    },
    "storage.class.implements": {
      "patterns": [
        {
          "begin": "(?<!\\\\)\\bimplements\\b",
          "end": "(?=})|((?=;))",
          "beginCaptures": {
            "0": {"name": "storage.modifier.implements.slice"}
          },
          "endCaptures": {
            "1": {"name": "invalid.illegal.missing-brace.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?[:\\w]+",
              "end": "(?={|}|;)|(,)",
              "beginCaptures": {
                "0": {"patterns": [{"include": "#storage.types"}]}
              },
              "endCaptures": {
                "1": {"name": "punctuation.separator.class.implements.slice"}
              },
              "patterns": [
                {"include": "#standard"}
              ]
            },
            {"include": "#storage.class.body"}
          ]
        },
        {"include": "#storage.class.body"}
      ]
    },
    "storage.class.body": {
      "patterns": [
        {
          "begin": "{",
          "end": "(?=})",
          "beginCaptures": {
            "0": {"name": "punctuation.section.block.begin.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {"include": "#storage.basic"}
          ]
        }
      ]
    },
    "storage.basic": {
      "patterns": [
        {"include": "#storage.modifier"},
        {
          "name": "meta.bool.slice",
          "begin": "\\\\?\\bbool\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [{"include": "#storage.types"}]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.bool.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#storage.basic.assignment"}
              ]
            }
          ]
        },
        {
          "name": "meta.byte.slice",
          "begin": "\\\\?\\bbyte\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [{"include": "#storage.types"}]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.byte.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#storage.basic.assignment"}
              ]
            }
          ]
        },
        {
          "name": "meta.short.slice",
          "begin": "\\\\?\\bshort\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [{"include": "#storage.types"}]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.short.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#storage.basic.assignment"}
              ]
            }
          ]
        },
        {
          "name": "meta.int.slice",
          "begin": "\\\\?\\bint\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [{"include": "#storage.types"}]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.int.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#storage.basic.assignment"}
              ]
            }
          ]
        },
        {
          "name": "meta.long.slice",
          "begin": "\\\\?\\blong\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [{"include": "#storage.types"}]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.long.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#storage.basic.assignment"}
              ]
            }
          ]
        },
        {
          "name": "meta.float.slice",
          "begin": "\\\\?\\bfloat\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [{"include": "#storage.types"}]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.float.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#storage.basic.assignment"}
              ]
            }
          ]
        },
        {
          "name": "meta.double.slice",
          "begin": "\\\\?\\bdouble\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [{"include": "#storage.types"}]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.double.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#storage.basic.assignment"}
              ]
            }
          ]
        },
        {
          "name": "meta.string.slice",
          "begin": "\\\\?\\bstring\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [{"include": "#storage.types"}]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.string.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#storage.basic.assignment"}
              ]
            }
          ]
        },
        {
          "name": "meta.type.slice",
          "begin": "\\\\?\\b[:\\w]+\\b",
          "end": "(;)|((?=}))",
          "beginCaptures": {
            "0": {"patterns": [{"include": "#storage.types.custom"}]}
          },
          "endCaptures": {
            "1": {"name": "punctuation.terminator.semicolon.slice"},
            "2": {"name": "invalid.illegal.missing.semicolon.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {
              "begin": "\\\\?\\b\\w+\\b",
              "end": "(?=;|})",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.slice",
                  "patterns": [{"include": "#storage.identifier"}]
                }
              },
              "patterns": [
                {"include": "#storage.basic.assignment"}
              ]
            }
          ]
        }
      ]
    },
    "storage.basic.assignment": {
      "patterns": [
        {"include": "#standard"},
        {
          "begin": "=",
          "end": "(?=;|})",
          "beginCaptures": {
            "0": {"name": "keyword.operator.assignment.slice"}
          },
          "patterns": [
            {"include": "#standard"},
            {"include": "#constant"}
          ]
        }
      ]
    },
    "storage.types": {
      "patterns": [
        {
          "match": "(\\\\)?\\b(?:(bool)|(byte)|(short)|(int)|(long)|(float)|(double)|(string)|(Object)|(LocalObject)|(Value))\\b",
          "captures": {
            "1": {"name": "punctuation.escape.backslash.slice"},
            "2": {"name": "storage.type.bool.slice"},
            "3": {"name": "storage.type.byte.slice"},
            "4": {"name": "storage.type.short.slice"},
            "5": {"name": "storage.type.int.slice"},
            "6": {"name": "storage.type.long.slice"},
            "7": {"name": "storage.type.float.slice"},
            "8": {"name": "storage.type.double.slice"},
            "9": {"name": "storage.type.string.slice"},
            "10": {"name": "storage.type.object.slice"},
            "11": {"name": "storage.type.localobject.slice"},
            "12": {"name": "storage.type.value.slice"}
          }
        },
        {"include": "#storage.types.custom"}
      ]
    },
    "storage.types.custom": {
      "patterns": [
        {
          "match": "(\\\\)?([:\\w]+)",
          "captures": {
            "1": {"name": "punctuation.escape.backslash.slice"},
            "2": {
              "patterns": [
                {
                  "name": "variable.type.slice",
                  "match": "\\w+"
                },
                {
                  "name": "punctuation.accessor.slice",
                  "match": "::"
                },
                {
                  "name": "invalid.illegal.accessor.slice",
                  "match": ":"
                }
              ]
            }
          }
        },
        {"include": "#invalid"}
      ]
    },
    "storage.types.void": {
      "patterns": [
        {
          "name": "storage.type.void.slice",
          "match": "(\\\\)?\\bvoid\\b",
          "captures": {
            "1": {"name": "punctuation.escape.backslash.slice"}
          }
        }
      ]
    },
    "storage.modifier": {
      "patterns": [
        {
          "begin": "(?=\\[)",
          "end": "(?<=])",
          "patterns": [
            {"include": "#standard"},
            {"include": "#metadata.local"}
          ]
        },
        {
          "match": "(?<!\\\\)\\b(?:(local)|(const)|(idempotent)|(out)|(optional\\(\\d*\\)))(?:\\b|(?<=\\)))",
          "captures": {
            "1": {"name": "storage.modifier.local.slice"},
            "2": {"name": "storage.modifier.const.slice"},
            "3": {"name": "storage.modifier.idempotent.slice"},
            "4": {"name": "storage.modifier.out.slice"},
            "5": {
              "patterns": [
                {
                  "match": "(optional)(\\()(\\d*)(\\))",
                  "captures": {
                    "1": {"name": "storage.modifier.optional.slice"},
                    "2": {"name": "punctuation.section.group.optional.begin.slice"},
                    "3": {"patterns": [{"include": "#constant.numeric.dec"}]},
                    "4": {"name": "punctuation.section.group.optional.end.slice"}
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "storage.identifier": {
      "patterns": [
        {
          "name": "invalid.illegal.reserved.identifier.slice",
          "match": "(?<!\\\\)\\b(?:bool|byte|class|const|dictionary|double|enum|exception|extends|false|float|idempotent|implements|int|interface|local|LocalObject|long|module|Object|optional|out|sequence|short|string|struct|throws|true|Value|void)\\b"
        },
        {
          "match": "(\\\\)?\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
          "captures": {
            "1": {"name": "punctuation.escape.backslash.slice"},
            "2": {
              "patterns": [
                {
                  "name": "invalid.illegal.underscore.slice",
                  "match": "__+|\\b_|_\\b"
                }
              ]
            }
          }
        },
        {
          "name": "invalid.illegal.identifier.slice",
          "match": "."
        }
      ]
    },

    "constant": {
      "patterns": [
        {"include": "#constant.boolean"},
        {"include": "#constant.string"},
        {"include": "#constant.numeric.float"},
        {"include": "#constant.numeric.hex"},
        {"include": "#constant.numeric.oct"},
        {"include": "#constant.numeric.dec"}
      ]
    },
    "constant.boolean": {
      "patterns": [
        {
          "match": "\\b(?:(true)|(false))\\b",
          "captures": {
            "0": {"name": "constant.langauge.slice"},
            "1": {"name": "constant.boolean.true.slice"},
            "2": {"name": "constant.boolean.false.slice"}
          }
        }
      ]
    },
    "constant.numeric.dec": {
      "patterns": [
        {
          "name": "constant.numeric.integer.slice",
          "match": "(-|\\+)?\\b(?:0|[1-9]\\d*)\\b",
          "captures": {
            "1": {"name": "punctuation.definition.numeric.sign.slice"}
          }
        }
      ]
    },
    "constant.numeric.oct": {
      "patterns": [
        {
          "name": "constant.numeric.octal.slice",
          "match": "(-|\\+)?\\b(0)(\\d+)\\b",
          "captures": {
            "1": {"name": "punctuation.definition.numeric.sign.slice"},
            "2": {"name": "punctuation.definition.numeric.oct.slice"},
            "3": {"patterns": [
              {
                "name": "invalid.illegal.oct.slice",
                "match": "[8-9]"
              }
            ]}
          }
        }
      ]
    },
    "constant.numeric.hex": {
      "patterns": [
        {
          "name": "constant.numeric.hex.slice",
          "match": "(-|\\+)?\\b(0x)[\\da-fA-F]+\\b",
          "captures": {
            "1": {"name": "punctuation.definition.numeric.sign.slice"},
            "2": {"name": "punctuation.definition.numeric.hex.slice"}
          }
        }
      ]
    },
    "constant.numeric.float": {
      "patterns": [
        {
          "name": "constant.numeric.float.slice",
          "match": "(-|\\+)?(?:\\d+(\\.)\\d*|\\d*(\\.)\\d+|\\d+(?=e|E|f|F))(?:(e|E)-?\\d+)?(f|F)?",
          "captures": {
            "1": {"name": "punctuation.numeric.sign.slice"},
            "2": {"name": "punctuation.separator.decimal.slice"},
            "3": {"name": "punctuation.separator.decimal.slice"},
            "4": {"name": "punctuation.numeric.exponent.slice"},
            "5": {"name": "punctuation.definition.float.slice"}
          }
        }
      ]
    },
    "constant.string": {
      "patterns": [
        {
          "name": "string.quoted.double.slice",
          "begin": "\"",
          "end": "(\")|$",
          "beginCaptures": {
            "0": {"name": "punctuation.definition.string.begin.slice"}
          },
          "endCaptures": {
            "1": {"name": "punctuation.definition.string.end.slice"},
            "2": {"name": "invalid.illegal.mismatched-quotes.slice"}
          },
          "patterns": [
            {
              "match": "\\\\."
            },
            {"include": "#line.continuation"}
          ]
        }
      ]
    },

    "invalid": {
      "patterns": [
        {
          "name": "invalid.illegal",
          "match": "\\S"
        }
      ]
    },
    "line.continuation": {
      "patterns": [
        {
          "begin": "(\\\\)\\s*$",
          "end": "^",
          "beginCaptures": {
            "1": {"name": "punctuation.separator.continuation.backslash.slice"}
          }
        }
      ]
    },
    "standardP": {
      "patterns": [
        {"include": "#comment"},
        {"include": "#line.continuation"}
      ]
    },
    "standard": {
      "patterns": [
        {"include": "#comment"},
        {"include": "#preprocessor"},
        {"include": "#line.continuation"}
      ]
    }
  }
}
